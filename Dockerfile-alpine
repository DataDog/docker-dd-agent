FROM alpine:3.4

MAINTAINER Datadog <package@datadoghq.com>

ENV DD_HOME=/opt/datadog-agent \
    # prevent the agent from being started after install
    DD_START_AGENT=0 \
    DOCKER_DD_AGENT=yes \
    PYCURL_SSL_LIBRARY=openssl \
    AGENT_VERSION=5.17.0 \
    DD_ETC_ROOT="/opt/datadog-agent/agent" \
    PATH="/opt/datadog-agent/venv/bin:/opt/datadog-agent/agent/bin:$PATH" \
    PYTHONPATH="/opt/datadog-agent/agent" \
    DD_CONF_LOG_TO_SYSLOG=no \
    NON_LOCAL_TRAFFIC=yes \
    DD_SUPERVISOR_DELETE_USER=yes

# Install minimal dependencies
RUN apk add -qU --no-cache coreutils curl curl-dev python-dev tar sysstat tini

# Install build dependencies
ADD https://raw.githubusercontent.com/DataDog/dd-agent/master/packaging/datadog-agent/source/setup_agent.sh /tmp/setup_agent.sh
RUN apk add -qU --no-cache -t .build-deps gcc musl-dev pgcluster-dev linux-headers \
    # Install the agent
    && sh /tmp/setup_agent.sh \
    # Clean build dependencies
    && apk del -q .build-deps \
    && rm /tmp/setup_agent.sh

# Configure the Agent
RUN cp ${DD_ETC_ROOT}/datadog.conf.example ${DD_ETC_ROOT}/datadog.conf \
  && rm -f ${DD_ETC_ROOT}/conf.d/network.yaml.default

# Add Docker check
COPY conf.d/docker_daemon.yaml "${DD_ETC_ROOT}/conf.d/docker_daemon.yaml"
# Add install and config files
COPY entrypoint.sh /entrypoint.sh
COPY config_builder.py /config_builder.py
# Add debug_mode script
COPY debug_mode.sh /usr/local/bin/debug_mode.sh

# Extra conf.d and checks.d
VOLUME ["/conf.d", "/checks.d"]

# Expose supervisor and DogStatsD port
EXPOSE 9001/tcp 8125/udp

# Healthcheck
HEALTHCHECK --interval=5m --timeout=3s --retries=1 \
  CMD test $($DD_HOME/venv/bin/python $DD_HOME/venv/bin/supervisorctl \
      -c ${DD_ETC_ROOT}/supervisor.conf status | awk '{print $2}' | egrep -v 'RUNNING|EXITED' | wc -l) \
      -eq 0 || exit 1

ENTRYPOINT ["/sbin/tini", "-g", "--", "/entrypoint.sh"]

WORKDIR $DD_HOME
CMD ["supervisord", "-c", "agent/supervisor.conf"]
